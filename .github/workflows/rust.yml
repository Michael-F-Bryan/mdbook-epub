name: Rust

on:
  push:
  pull_request:

jobs:
  build:
    strategy:
      matrix:
        os: [ ubuntu-latest, windows-latest, macos-latest ]
        include:
          - os: ubuntu-latest
            install-epubcheck: sudo apt-get update -y && sudo apt-get upgrade -y && sudo apt-get install -y epubcheck
            epubcheck-path: epubcheck
          - os: windows-latest
            install-epubcheck: |
              # Create dir in root
              CMD="/c mkdir %GITHUB_WORKSPACE%\tools && cd %GITHUB_WORKSPACE%\tools && curl -L -o epubcheck.zip https://github.com/w3c/epubcheck/releases/download/v5.2.0/epubcheck-5.2.0.zip && 7z x epubcheck.zip"
              cmd.exe $CMD
              # Create bat file for start
              CMD="/c echo @echo off > %GITHUB_WORKSPACE%\tools\epubcheck.bat && echo java -jar %GITHUB_WORKSPACE%\tools\epubcheck-5.2.0\epubcheck.jar %%* >> %GITHUB_WORKSPACE%\tools\epubcheck.bat"
              cmd.exe $CMD
              # Add the path to the bat file to PATH
              echo "%GITHUB_WORKSPACE%\tools" >> $GITHUB_PATH
              # Save the path to the jar file
              echo "EPUBCHECK_JAR=%GITHUB_WORKSPACE%\tools\epubcheck-5.2.0\epubcheck.jar" >> $GITHUB_ENV
              # Check installation
              cmd.exe /c "dir /b %GITHUB_WORKSPACE%\tools"
            epubcheck-path: "%EPUBCHECK_JAR%"
          - os: macos-latest
            install-epubcheck: brew install epubcheck
            epubcheck-path: epubcheck

    runs-on: ${{ matrix.os }}
    env:
      EPUBCHECK_PATH: ${{ matrix.epubcheck-path }}

    steps:
      - name: Set up Rust
        uses: actions/checkout@v4

      - name: Install cargo version
        uses: dtolnay/rust-toolchain@stable

      - name: Set up Java
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Install epubcheck
        run: ${{ matrix.install-epubcheck }}
        shell: bash

      - name: Install cargo audit
        run: cargo install cargo-audit

      - name: Show rust version
        run: cargo --version

      - name: Build
        run: cargo build --verbose

      - name: Run tests
        run: cargo test --verbose

      - name: Run Clippy
        run: cargo clippy -- --no-deps -Dwarnings

      - name: Audit
        run: cargo audit
